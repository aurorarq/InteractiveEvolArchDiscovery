package net.sf.jclec.sbse.discovery;

import net.sf.jclec.syntaxtree.SyntaxTreeNode;

/**
 * NonTerminalNode for the discovery problem.
 * 
 * <p>HISTORY:
 * <ul>
 * 	<li>1.0: Creation (January 2013)
 * 	<li>2.0: Refactoring (July 2013)
 * </ul>
 * 
 * @author Aurora Ramirez Quesada
 * @author Jose Raul Romero
 * @author Sebastian Ventura
 * @version 2.0
 * */
public class NonTerminalNode extends SyntaxTreeNode {

	//////////////////////////////////////////////////////////////////
	//----------------------------------------------------- Properties
	//////////////////////////////////////////////////////////////////

	/** Generated by Eclipse */
	private static final long serialVersionUID = 3254739179300272251L;

	/** List of simplex elements in which the element can be decomposed */
	private String [] elements;

	//////////////////////////////////////////////////////////////////
	//--------------------------------------------------- Constructors
	//////////////////////////////////////////////////////////////////

	/**
	 * Parameterized constructor.
	 * @param symbol The node symbol.
	 * @param elements The decomposed elements.
	 * */
	public NonTerminalNode(String symbol, String [] elements){
		super(symbol);
		this.elements = elements;
	}

	//////////////////////////////////////////////////////////////////
	//----------------------------------------------- Override methods
	//////////////////////////////////////////////////////////////////
	
	@Override
	public int arity(){
		if(this.elements != null)
			return this.elements.length;
		return -1;
	}

	@Override
	public SyntaxTreeNode instance(){
		return this.copy();
	}

	@Override
	public SyntaxTreeNode copy(){
		NonTerminalNode newElement = new NonTerminalNode(this.getSymbol(), this.getElements());
		return newElement;
	}

	//////////////////////////////////////////////////////////////////
	//------------------------------------------------- Public methods
	//////////////////////////////////////////////////////////////////

	/**
	 * Get the set of elements in which
	 * the complex element can be decomposed.
	 * @return The set of elements.
	 * */
	public String [] getElements(){
		return this.elements;
	}
}
