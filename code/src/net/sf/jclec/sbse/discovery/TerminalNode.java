package net.sf.jclec.sbse.discovery;

import net.sf.jclec.syntaxtree.SyntaxTreeNode;

/**
 * Terminal node for the discovery problem.
 * 
 * <p>HISTORY:
 * <ul>
 * 	<li>1.0: Creation (January 2013)
 * 	<li>2.0: Refactoring (July 2013)
 * </ul>
 * 
 * @author Aurora Ramirez Quesada
 * @author Jose Raul Romero
 * @author Sebastian Ventura
 * @version 2.0
 * */
public class TerminalNode extends SyntaxTreeNode{

	//////////////////////////////////////////////////////////////////
	//----------------------------------------------------- Properties
	//////////////////////////////////////////////////////////////////
	
	/** Generated by Eclipse */
	private static final long serialVersionUID = -1773428801569234148L;

	//////////////////////////////////////////////////////////////////
	//--------------------------------------------------- Constructors
	//////////////////////////////////////////////////////////////////

	/**
	 * Parameterised constructor.
	 * @param symbol The node symbol.
	 * */
	public TerminalNode(String symbol){
		super(symbol);
	}

	//////////////////////////////////////////////////////////////////
	//----------------------------------------------- Override methods
	//////////////////////////////////////////////////////////////////

	@Override
	public int arity() {
		return 0;
	}

	@Override
	public SyntaxTreeNode instance() {
		return this.copy();
	}

	@Override
	public SyntaxTreeNode copy() {
		TerminalNode newElement = new TerminalNode(this.getSymbol());
		return newElement;
	}
	
	@Override
	public String toString(){
		return this.symbol;
	}
}